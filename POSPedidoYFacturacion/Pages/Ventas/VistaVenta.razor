@page "/ventas/vista/{Id:int}"

@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@inject IMessage IMessage
@inject NavigationManager NavManager
@inject IJSRuntime IJSRuntime
@inject ProtectedLocalStorage LocalStorage

<MudPaper>
    <MudToolBar>
        <h5>Detalles de Venta</h5>
        <MudSpacer />
        <MudTooltip Text="Imprimir">
            <MudIconButton Icon="@Icons.Material.Filled.Print" Color="Color.Info" Variant="MudBlazor.Variant.Outlined" OnClick="ImprimirVenta"/>
        </MudTooltip>
        <MudTooltip Text="Anular">
            <MudIconButton Icon="@Icons.Material.Filled.Clear" Color="Color.Error" Variant="MudBlazor.Variant.Outlined" OnClick="Anular" />
        </MudTooltip>
    </MudToolBar>
</MudPaper>
<RadzenCard Style="padding:5px">
    @if (IsBusy)
    {
        <MudOverlay Visible="@IsBusy" DarkBackground="true" Absolute="true" Style="height:100%">
            <MudProgressCircular Size="Size.Large" Color="Color.Info" Indeterminate="true" />
        </MudOverlay>
    }
    else
    {
        <RadzenCard>
            <div class="row">
                <div class="col-sm-3">
                    <div class="form-group">
                        <label>Codigo:</label>
                        <div>
                            <RadzenLabel Text="@Venta.Id.ToString()" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Tipo de Facturado</label>
                        <div>
                            <RadzenLabel Text="@Venta.TipoFactura.Nombre" />
                        </div>
                    </div>
                    @if (Venta.TipoOrdenId != null)
                    {
                        <div class="form-group">
                            <label>Tipo de Orden</label>
                            <div>
                                <RadzenLabel Text="@Venta.TipoOrden.Nombre" />
                            </div>
                        </div>
                    }
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label>Fecha:</label>
                        <div>
                            <RadzenLabel Text="@Venta.FechaFinalizado.Value.ToString("d")" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Facturado:</label>
                        <div>
                            <RadzenLabel Text="@(Venta.Facturado == false ? "Pendiente" : "Facturado")" />
                        </div>
                    </div>
                    @if(Venta.Nulo)
                    {
                    <div class="form-group">
                        <label>Nula:</label>
                        <div>
                            <RadzenLabel Text="Documento Nulo" />
                        </div>
                    </div>
                    }
                    @if(Venta.TipoFacturaId == 1)
                    {
                        <div class="form-group">
                            <label>Balance a Credito:</label>
                            <div>
                                <RadzenLabel Text="@EstadoFacturaCredito" />
                            </div>
                        </div>
                    }
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label>Cliente:</label>
                        <div>
                            <RadzenLabel Text="@Venta.NombreCliente" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Direccion:</label>
                        <div>
                            <RadzenLabel Text="@Venta.DireccionCliente" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Celular:</label>
                        <div>
                            <RadzenLabel Text="@Venta.CelularCliente" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <div>
                                    <label>Sub-Total: </label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label>Descuento: </label>
                                </div>
                            </div>
                            @if(Empresa.UtilizarDelivery)
                            {
                                <div class="form-group">
                                    <div>
                                        <label>Delivery: </label>
                                    </div>
                                </div>
                            }
                            @if(Empresa.UtilizarManoDeObra)
                            {
                                <div class="form-group">
                                    <div>
                                        <label>Mano de Obra: </label>
                                    </div>
                                </div>
                            }
                            <div class="form-group">
                                <div>
                                    <label>Impuesto: </label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label>Total: </label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label>Monto Efectivo: </label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label>Devuelta: </label>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6" style="justify-content:flex-end">
                            <div class="form-group">
                                <div>
                                    <label>@Venta.SubTotal.ToString("C2")</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label>@Venta.Descuento.ToString("C2")</label>
                                </div>
                            </div>
                            @if(Empresa.UtilizarDelivery)
                            {
                                <div class="form-group">
                                    <div>
                                        <label>@Venta.Delivery.ToString("C2")</label>
                                    </div>
                                </div>
                            }
                            @if(Empresa.UtilizarManoDeObra)
                            {
                                <div class="form-group">
                                    <div>
                                        <label>@Venta.MontoManoObra.ToString("C2")</label>
                                    </div>
                                </div>
                            }
                            <div class="form-group">
                                <div>
                                    <label>@Venta.Impuesto.ToString("C2")</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label>@Venta.Total.ToString("C2")</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label>@Venta.MontoEfectivo.ToString("C2")</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <div>
                                    <label>@Venta.MontoDevuelta.ToString("C2")</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </RadzenCard>

        <MudTabs>
            <MudTabPanel Text="Detalle">
                <MudTable Items="Venta.VentaDetalles" T="VentaDetalle" Dense="true" Height="300px" FixedHeader="true">
                    <HeaderContent>
                        <MudTh scope="col">Codigo</MudTh>
                        <MudTh scope="col">Producto</MudTh>
                        <MudTh scope="col">Cantidad</MudTh>
                        <MudTh scope="col">Precio</MudTh>
                        <MudTh scope="col">Descuento</MudTh>
                        <MudTh scope="col">Importe</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@context.Producto.Codigo</MudTd>
                        <MudTd>@context.NombreProducto.ToString()</MudTd>
                        <MudTd>@context.Cantidad.ToString()</MudTd>
                        <MudTd>@context.Precio.ToString("C2")</MudTd>
                        <MudTd>@context.Descuento.ToString("C2")</MudTd>
                        <MudTd>@context.Importe.ToString("C2")</MudTd>
                    </RowTemplate>
                </MudTable>
            </MudTabPanel>
            <MudTabPanel Text="Relacion con Orden">
                @if(Venta.OrdenVentas.Count() == 0)
                {
                    <MudPaper style="margin: 200px;">
                        <MudText Typo="Typo.h5">No se genero a partir de una Orden !</MudText>
                    </MudPaper>
                }
                else
                {
                    <AlphaSoftPOSOffline.Pages.Ordenes.VistaOrden Id="Venta.OrdenVentas.SingleOrDefault().OrdenId"/>
                }
            </MudTabPanel>
        </MudTabs>
    }

</RadzenCard>


@code {
    [Parameter]
    public int Id { get; set; }

    public bool IsBusy { get; set; } = false;

    public Venta Venta { get; set; } = new Venta();

    public string EstadoFacturaCredito {get; set;}

    public Empresa Empresa { get; set; } = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CargarEmpresa();
        }
    }
    private async Task CargarEmpresa()
    {
        var result = await LocalStorage.GetAsync<Empresa>("Empresa");
        if (result.Success)
        {
            Empresa = result.Value;
            StateHasChanged();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        await CargarVenta();
    }

    private async Task CargarVenta()
    {
        IsBusy = true;
        using var DbContext = DbContextFactory.CreateDbContext();
        Venta = await DbContext.Ventas
            .Include(v => v.TipoFactura)
            .Include(v => v.TipoOrden)
            .Include(v => v.VentaDetalles)
            .ThenInclude(vd => vd.Producto)
            .Include(v => v.Sector)
            .Include(v => v.OrdenVentas)
            .SingleOrDefaultAsync(v => v.Id == Id);

        if(Venta.TipoFacturaId == 1)
        {
            await CargarBalance(Id);
        }

        IsBusy = false;
    }

    private async Task CargarBalance(int Id)
    {
        using var DbContext = DbContextFactory.CreateDbContext();
        var Balance = await DbContext.CXCVentaBalances
        .Include(cxcv => cxcv.Venta)
        .SingleOrDefaultAsync(cxcv => cxcv.VentaId == Id && cxcv.Venta.TipoFacturaId == 1 );

            if(Balance.Balance > 0)
            {
                EstadoFacturaCredito = "Pago Incompleto";
            }
            else if(Balance.Balance == 0)
            {
                EstadoFacturaCredito = "Pago completo";
            }
    }

    private async Task Anular()
    {                    
        using var DbContext = DbContextFactory.CreateDbContext();
            

        var TieneMovimientos = await DbContext.CXCTransaccionDetalles.Include(cxcnc=>cxcnc.CXCTransaccion).Where(cxcnc=>cxcnc.VentaId == Venta.Id && cxcnc.CXCTransaccion.Nulo == false).ToListAsync();
        
        if(TieneMovimientos.Count() > 0)
        {
            await IMessage.Alert($"la venta #{Venta.Id} del cliente {Venta.NombreCliente} tiene transacciones de cxc aplicadas, no se puede anular!");
            return;
        }
        
        if(Venta.Nulo)
        {
            await IMessage.Alert($"la venta #{Venta.Id} del cliente {Venta.NombreCliente} ya esta anulada, no se puede anular!");
            return;
        }



        var Confirm = await IMessage.Confirm($"Desea anular la Venta #{Id} del cliente {Venta.NombreCliente} ?");

        if (Confirm)
        {
            Venta.Nulo = true;

            DbContext.Update(Venta);

            await DbContext.SaveChangesAsync();

            foreach (var item in Venta.VentaDetalles)
            {
                if (item.Producto.ManejaExistencia)
                {
                    var EPxA = await DbContext.Existencias.SingleOrDefaultAsync(EPA => EPA.ProductoId == item.ProductoId && EPA.AlmacenId == Venta.AlmacenId);

                    EPxA.Cantidad += item.Cantidad;
                    DbContext.Update(EPxA);
                    await DbContext.SaveChangesAsync();
                
                }
            }


            await IMessage.Success($"la venta #{Venta.Id} del cliente {Venta.NombreCliente} ha sido anulada!");
        }
    }

    private async Task ImprimirVenta()
    {
        await IJSRuntime.AbrirNuevaPagina($"/imprimirfactura/{Venta.Id}");
    }

}