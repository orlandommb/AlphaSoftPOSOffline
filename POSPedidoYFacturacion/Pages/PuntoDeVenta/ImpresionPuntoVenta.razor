@page "/imprimirfactura/{Id:int}"

@attribute [Authorize]

@layout ImpresionLayout

@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@inject IMessage IMessage
@inject IJSRuntime IJSRuntime
@inject NavigationManager NavManager


@if (IsBusy)
    {
        <div class="middle-box">
            <div class="d-flex justify-content-center">
                <div class="spinner-border" role="status" style="width: 3rem; height: 3rem;">
                    <span class="sr-only">Cargando...</span>
                </div>
            </div>
        </div>
    }
    else
    {
    <div class="invoice-box" style="margin-top: 1px; width:385px;font-size:16px;font-weight:bold">
        <table cellpadding="0" cellspacing="0">
            @if (Empresa.Id != 0)
            {
                <tr class="top">
                    <td class="title" colspan="4" style="text-align: center;">
                        @if (Empresa.ImprimirLogoEnOrden)
                            {
                                <img src="@(string.IsNullOrEmpty(Empresa.Logo) ? "AlphaSoftLogo.png" : @Empresa.Logo)" style="width: 100%; max-width: 200px; height: 200px; text-align:center" />
                            }
                    </td>
                </tr>


                <tr style="text-align:center">
                    <td colspan="4" style="font-size:30px">@Empresa.Nombre.ToString()</td>
                </tr>
                <tr style="text-align:center">
                    <td colspan="4">Direccion:@Empresa.Direccion.ToString()</td>
                </tr>
                <tr style="text-align:center">
                    <td colspan="4"><RadzenIcon Icon="phone" /> @Empresa.Telefono.ToString()</td>
                </tr>
            }

            <tr style="text-align:center">
                <td style="font-size:30px" colspan="4">Factura</td>
            </tr>

            <tr style="text-align:center">
                <td style="font-size:20px" colspan="4">@Venta.TipoFactura.Nombre</td>
            </tr>

            <tr class="information">
                <td colspan="5">
                    <table class="table table-sm">
                        <tr style="border-top: 2px solid black">
                            <td>
                                No. Factura #: @Venta.Id
                            </td>

                            <td>
                                Fecha Emitida:<br />
                                @Venta.FechaFinalizado.ToString()
                            </td>

                        </tr>
                        <tr>
                            <td colspan="2">
                                Cliente:<br /> @Venta.NombreCliente
                            </td>

                        </tr>
                        
                        <tr>
                            <td>
                                Celular:<br /> @Venta.CelularCliente
                            </td>
                            <td>
                                Sector: @(Venta.SectorId == null ? "": Venta.Sector.Nombre)
                            </td>
                        </tr>
                        <tr>
                            

                            <td colspan="2">
                                Direccion: @Venta.DireccionCliente<br />
                            </td>

                        </tr>
                    </table>
                </td>
            </tr>

            <tr style="height:20px">

            </tr>

            <tr class="heading" style="border-top: 2px solid black">
                <td colspan="4">Producto</td>
                
            </tr>

            <tr class="heading" style="border-bottom: 2px solid black">
                <td>Cant.</td>
                <td>Precio</td>
                <td>Desc.</td>
                <td>Total</td>
            </tr>



            @foreach (var item in Venta.VentaDetalles)
            {
                <tr class="item" style="border-top: 2px solid black">
                    <td colspan="4">@item.Producto.Nombre</td>
                    
                </tr>
                <tr style="border-bottom: 2px solid black">
                    <td>@item.Cantidad</td>
                    <td>@item.Precio.ToString("C2")</td>
                    <td>@item.Descuento.ToString("C2")</td>
                    <td>@item.Importe.ToString("C2")</td>
                </tr>
            }

            <tr style="height:20px">

            </tr>

            <tr style="margin-top:10px" class="heading">
                <td class="title" colspan="4">Totales</td>
            </tr>

            <tr class="total">
                <td>Sub-Total:</td>
                <td></td>
                <td></td>
                <td>@Venta.SubTotal.ToString("C2")</td>
            </tr>
            <tr class="total">
                <td>Descuento:</td>
                <td></td>
                <td></td>
                <td>@Venta.Descuento.ToString("C2")</td>
            </tr>
            @if (Empresa.UtilizarDelivery) 
            {
                <tr class="total">
                    <td>Delivery:</td>
                    <td></td>
                    <td></td>
                    <td>@Venta.Delivery.ToString("C2")</td>
                </tr>
            }
            @if (Empresa.UtilizarManoDeObra)
            {
                <tr class="total">
                    <td>Mano de Obra:</td>
                    <td></td>
                    <td></td>
                    <td>@Venta.MontoManoObra.ToString("C2")</td>
                </tr>
            }
            <tr class="total">

                <td>Impuesto:</td>
                <td></td>
                <td></td>
                <td>@Venta.Impuesto.ToString("C2")</td>
            </tr>
            <tr class="total">

                <td>Total:</td>
                <td></td>
                <td></td>
                <td>@Venta.Total.ToString("C2")</td>
            </tr>

            <tr style="height:10px">

            </tr>

            <tr class="heading">
                <td>Metodo de Pago</td>
                <td></td>
                <td></td>
                <td>#</td>
            </tr>

            <tr class="total">
                <td>Efectivo</td>
                <td></td>
                <td></td>
                <td>@Venta.MontoEfectivo.ToString("C2")</td>
            </tr>

            <tr class="total">
                <td>Devuelta</td>
                <td></td>
                <td></td>
                <td>@(Venta.MontoDevuelta.ToString("C2"))</td>
            </tr>

            <tr style="height:20px">

            </tr>

            <tr style="text-align:center; margin-top:10px">
                <td colspan="4">Le atendio @Venta.Usuario.UserName</td>
            </tr>

            <tr style="text-align:center; margin-top:10px; font-size:small">
                <td colspan="4">
                    Desarrollado y Distribuido por:
                </td>
            </tr>
            <tr style="text-align:center; margin-top:10px;">
                <td colspan="4">
                    <RadzenImage Path="AlphaSoftLogo.png" Style="height:50px;width:50px" />
                </td>
            </tr>
            <tr style="text-align:center;">
                <td colspan="4">
                    <RadzenLabel style="font-size: small" Text="@("@alphasoftdev")" />
                </td>
            </tr>

        </table>
    </div>
}
@code {
    [Parameter]
    public int Id { get; set; }

    public bool IsBusy { get; set; } = false;
    public bool MostrarDatosEmpresa { get; set; } = false;


    public Venta Venta { get; set; } = new Venta();

    public Empresa Empresa { get; set; } = new Empresa();

    protected override async Task OnParametersSetAsync()
    {
        IsBusy = true;
        await CargarEmpresa();
        await CargarVenta(); 
        IsBusy = false;

    }


    private async Task CargarVenta()
    {
        using var DbContext = DbContextFactory.CreateDbContext();
        Venta = await DbContext.Ventas
                            .Include(o=>o.Cliente)
                            .Include(o=>o.Usuario)
                            .Include(o=>o.Sector)
                            .Include(v => v.TipoOrden)
                            .Include(v => v.TipoFactura)
                            .Include(v => v.VentaDetalles)
                            .ThenInclude(vd => vd.Producto)
                            .SingleOrDefaultAsync(v => v.Id == Id);

    }
    private async Task CargarEmpresa()
    {
        using var DbContext = DbContextFactory.CreateDbContext();
        Empresa = await DbContext.Empresa.OrderBy(E => E.Id).SingleOrDefaultAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (!firstRender)
        {
            await ImprimirFactura();
        }
    }

   private async Task ImprimirFactura()
    {
        await IJSRuntime.ImprimirPagina();
        await IJSRuntime.CerrarPagina();

    }
}
